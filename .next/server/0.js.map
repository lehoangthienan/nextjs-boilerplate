{"version":3,"file":"0.js","sources":["webpack:///./configures/configs.js","webpack:///./containers/Full/Full.js","webpack:///./containers/Full/index.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./redux/appRedux.js","webpack:///./services/socketService.js","webpack:///./utils/constants.js"],"sourcesContent":["export default {\n    API_URL: 'http://localhost:3000',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dynamic from 'next/dynamic';\nimport { connect } from 'react-redux';\nimport loGet from 'lodash/get';\n\nimport AppActions from '../../redux/appRedux';\nimport { connectSocket, disConnectSocket } from '../../services/socketService';\n\nimport '../../scss/style.scss';\nimport 'antd/dist/antd.css';\n\nconst Header = dynamic({ loader: () => import('../../components/Header') });\nconst Footer = dynamic({ loader: () => import('../../components/Footer') });\n\nclass Full extends Component {\n  componentDidMount() {\n    const {\n      startupWorkingFlow, history, dispatch, // eslint-disable-line\n    } = this.props;\n    startupWorkingFlow(history);\n    let token = '';\n    let user = {};\n\n    if (localStorage.getItem('token')) token = localStorage.getItem('token');\n    if (localStorage.getItem('user')) user = JSON.parse(localStorage.getItem('user'));\n\n    startupWorkingFlow(history);\n\n    connectSocket(token, dispatch, loGet(user, ['_id'], ''));\n  }\n\n  componentWillUnmount() {\n    disConnectSocket();\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Header />\n        {children}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nFull.propTypes = {\n  startupWorkingFlow: PropTypes.func,\n  history: PropTypes.object,\n  children: PropTypes.any,\n};\n\nconst mapStateToProps = (state) => ({\n  isReady: state.toJS().app.isReady,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch,\n  startupWorkingFlow: (history) => {\n    dispatch(AppActions.startupWorkingFlow(history));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Full);\n","import Full from './Full';\n\nexport default Full;\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { createReducer, createActions } from 'reduxsauce'\nimport { fromJS } from 'immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  startupWorkingFlow: ['history'],\n  getAppReady: ['isReady'],\n  showSuccessRequest: ['message'],\n  showErrorRequest: ['error'],\n})\n\nexport const AppTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = fromJS({\n  error: '',\n  isReady: false,\n})\n\n/* ------------- Reducers ------------- */\nconst startupWorkingFlow = state => state.merge({ isReady: false })\n\nconst getAppReady = (state, { isReady }) => state.merge({ isReady })\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.STARTUP_WORKING_FLOW]: startupWorkingFlow,\n  [Types.GET_APP_READY]: getAppReady,\n})\n","import io from 'socket.io-client'\n\nimport configs from '../configures/configs'\nimport { EVENT_SOCKET } from '../utils/constants'\n\nlet socket = null\n\nexport function connectSocket(token, dispatch, userId) { // eslint-disable-line\n  disConnectSocket()\n  socket = io(configs.API_URL, {\n    query: {\n      accessToken: token,\n    },\n  })\n\n  socket.on(EVENT_SOCKET.CONNECT, () => {\n    console.log('Socket Connect Successfuly')\n  })\n\n  return socket\n}\n\nexport function disConnectSocket() {\n  if (socket) {\n    socket.disconnect()\n  }\n}\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount'\nexport const DAEMON = '@@saga-injector/daemon'\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount'\n\nexport const COUNTRY_CODE_VN = '+84'\n\nexport const EVENT_SOCKET = {\n  ERROR: 'error',\n  DISCONNECT: 'disconnect',\n  CONNECT: 'connect',\n}"],"mappings":";;;;;;;;;;;AAAA;AAAA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAEA;AAOA;;;;AA9BA;AACA;AAgCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAMA;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;;;;A","sourceRoot":""}